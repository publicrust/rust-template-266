[
  {
      "pluginName": "Backpacks",
      "hookSignature": "OnBackpackOpened(BasePlayer,ulong,ItemContainer)"
  },
  {
      "pluginName": "Backpacks",
      "hookSignature": "OnBackpackClosed(BasePlayer,ulong,ItemContainer)"
  },
  {
      "pluginName": "FClan",
      "hookSignature": "GetPointRaid(ulong,ulong)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "IsFriendOf(ulong)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "GetFriendList(ulong)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "GetFriendList(string)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "GetFriends(ulong)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "GetMaxFriends()"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "IsFriend(ulong,ulong)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "RemoveFriend(ulong,ulong)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "AddFriend(ulong,ulong)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "AreFriends(ulong,ulong)"
  },
  {
      "pluginName": "Friends",
      "hookSignature": "HasFriend(ulong,ulong)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnKickPlayer(string,string,BasePlayer)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnBannedPlayerIP(string,string,double,BasePlayer)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnBannedPlayerID(ulong,string,double,BasePlayer)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnUpdateTimeBannedID(string,double,BasePlayer)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnUpdateTimeBannedIP(string,double,BasePlayer)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnChangePermanentBannedID(string,double,BasePlayer)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnChangePermanentBannedIP(string,double,BasePlayer)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnUnbannedID(string,BasePlayer)"
  },
  {
      "pluginName": "IQBanSystem",
      "hookSignature": "OnUnbannedIP(string,BasePlayer)"
  },
  {
      "pluginName": "IQCases",
      "hookSignature": "OnOpenedCase(BasePlayer,string)"
  },
  {
      "pluginName": "IQCases",
      "hookSignature": "OnBuyCase(BasePlayer,string)"
  },
  {
      "pluginName": "IQCases",
      "hookSignature": "OnSellCase(BasePlayer,string)"
  },
  {
      "pluginName": "IQChat",
      "hookSignature": "OnPlayerMuted(BasePlayer,BasePlayer,int,String)"
  },
  {
      "pluginName": "IQChat",
      "hookSignature": "OnModeratorSendBadWords(BasePlayer,string)"
  },
  {
      "pluginName": "IQChat",
      "hookSignature": "OnPlayerSendBadWords(BasePlayer,string)"
  },
  {
      "pluginName": "IQPermissions",
      "hookSignature": "SetPermission(ulong,string,DateTime)"
  },
  {
      "pluginName": "IQPermissions",
      "hookSignature": "SetPermission(ulong,string,string)"
  },
  {
      "pluginName": "IQPermissions",
      "hookSignature": "SetGroup(ulong,string,DateTime)"
  },
  {
      "pluginName": "IQPermissions",
      "hookSignature": "SetGroup(ulong,string,string)"
  },
  {
      "pluginName": "IQPermissions",
      "hookSignature": "RevokePermission(ulong,string)"
  },
  {
      "pluginName": "IQPermissions",
      "hookSignature": "RevokeGroup(ulong,string,DateTime)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "OnHomeRemoved(BasePlayer,Vector3,string)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "OnHomeAdded(BasePlayer,Vector3,string)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "OnHomeAccepted(BasePlayer,string,int)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "OnHomeAccepted(BasePlayer,string,int)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "OnPlayerTeleported(BasePlayer,Vector3,Vector3)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "OnTeleportAccepted(BasePlayer,BasePlayer,int)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "OnTeleportRejected(BasePlayer,BasePlayer)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "CanTeleport(BasePlayer)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "canTeleport(BasePlayer)"
  },
  {
      "pluginName": "IQTeleportation",
      "hookSignature": "OnTeleportRejected(BasePlayer,BasePlayer)"
  },
  {
      "pluginName": "Kits",
      "hookSignature": "GetKitNames(List<string>)"
  },
  {
      "pluginName": "Kits",
      "hookSignature": "SetPlayerCooldown(ulong,string,double)"
  },
  {
      "pluginName": "Kits",
      "hookSignature": "SetPlayerKitUses(ulong,string,int)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnPlayerTeleported(BasePlayer,Vector3,Vector3)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnTeleportRejected(BasePlayer,BasePlayer)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnTeleportRequestCompleted(BasePlayer,BasePlayer)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnTeleportAccepted(BasePlayer,BasePlayer,int)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnHomeAccepted(BasePlayer,string,int)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnHomeRemoved(BasePlayer,Vector3,string)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnHomeAdded(BasePlayer,Vector3,string)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnTeleportInterrupted(BasePlayer,string,ulong,string)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnTeleportInterrupted(BasePlayer,string,ulong,string)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnHomeAdded(BasePlayer,Vector3,string)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnHomeRemoved(BasePlayer,Vector3,string)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnHomeAccepted(BasePlayer,string,int)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnTeleportAccepted(BasePlayer,BasePlayer,int)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnTeleportRequestCompleted(BasePlayer,BasePlayer)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnTeleportRejected(BasePlayer,BasePlayer)"
  },
  {
      "pluginName": "NTeleportation",
      "hookSignature": "OnPlayerTeleported(BasePlayer,Vector3,Vector3)"
  },
  {
      "pluginName": "NoEscape",
      "hookSignature": "StartRaidBlocking(BasePlayer,Vector3,bool)"
  },
  {
      "pluginName": "NoEscape",
      "hookSignature": "StopBlocking(BasePlayer)"
  },
  {
      "pluginName": "NoEscape",
      "hookSignature": "StopRaidBlocking(string)"
  },
  {
      "pluginName": "NoEscape",
      "hookSignature": "StartCombatBlocking(BasePlayer)"
  },
  {
      "pluginName": "NoEscape",
      "hookSignature": "StopCombatBlocking(string)"
  },
  {
      "pluginName": "RaidableBases",
      "hookSignature": "OnRaidableBaseStarted(Vector3,int,float)"
  },
  {
      "pluginName": "RaidableBases",
      "hookSignature": "OnRaidableBaseEnded(Vector3,int,float)"
  },
  {
      "pluginName": "RaidableBases",
      "hookSignature": "OnPlayerEnteredRaidableBase(BasePlayer,Vector3,bool)"
  },
  {
      "pluginName": "RaidableBases",
      "hookSignature": "OnPlayerExitedRaidableBase(BasePlayer,Vector3,bool)"
  },
  {
      "pluginName": "TimedPermissions",
      "hookSignature": "OnTimedPermissionGranted(string,string,TimeSpan)"
  },
  {
      "pluginName": "TimedPermissions",
      "hookSignature": "OnTimedPermissionExtended(string,string,TimeSpan)"
  },
  {
      "pluginName": "TimedPermissions",
      "hookSignature": "OnTimedGroupAdded(string,string,TimeSpan)"
  },
  {
      "pluginName": "TimedPermissions",
      "hookSignature": "OnTimedGroupExtended(string,string,TimeSpan)"
  },
  {
      "pluginName": "Vanish",
      "hookSignature": "OnVanishReappear(BasePlayer)"
  },
  {
      "pluginName": "XDQuest",
      "hookSignature": "OnQuestCompleted(BasePlayer,string)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "SetZoneStatus(string,bool)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "AddFlag(string,string)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "RemoveFlag(string,string)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "AddDisabledFlag(string,string)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "RemoveDisabledFlag(string,string)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "OnEnterZone(string,BasePlayer)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "OnExitZone(string,BasePlayer)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "OnEntityEnterZone(string,BaseEntity)"
  },
  {
      "pluginName": "ZoneManager",
      "hookSignature": "OnEntityExitZone(string,BaseEntity)"
  },
  {
      "pluginName": "aTimeAPI",
      "hookSignature": "OnRealSecond()"
  },
  {
      "pluginName": "aTimeAPI",
      "hookSignature": "OnRustDayStarted()"
  },
  {
      "pluginName": "aTimeAPI",
      "hookSignature": "OnRustNightStarted()"
  },
  {
      "pluginName": "aTimeAPI",
      "hookSignature": "OnNewRealHourStarted(int)"
  },
  {
      "pluginName": "aTimeAPI",
      "hookSignature": "OnNewRealDayStarted(int)"
  },
  {
      "pluginName": "aTimeAPI",
      "hookSignature": "OnNewRealMonthStarted(int)"
  },
  {
      "pluginName": "aTimeAPI",
      "hookSignature": "OnNewRealYearStarted(int)"
  }
]